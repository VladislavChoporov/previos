import os
import pandas as pd
from datetime import datetime, timedelta
from dotenv import load_dotenv
from tinkoff.invest import AsyncClient, CandleInterval

from csv_loader import load_candles_from_csv, save_candles_to_csv

load_dotenv()
TINKOFF_TOKEN = os.getenv("TINKOFF_TOKEN")

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—á–µ–π
CANDLES_FOLDER = "candles"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
INTERVAL = CandleInterval.CANDLE_INTERVAL_5_MIN
DAYS_BACK = 730  # 2 –≥–æ–¥–∞ –Ω–∞–∑–∞–¥

async def fetch_new_candles(client, figi, from_date, to_date):
    candles = await client.market_data.get_candles(
        figi=figi,
        from_=from_date,
        to=to_date,
        interval=INTERVAL
    )
    data = []
    for candle in candles.candles:
        o = candle.open.units + candle.open.nano / 1e9
        h = candle.high.units + candle.high.nano / 1e9
        l = candle.low.units + candle.low.nano / 1e9
        c = candle.close.units + candle.close.nano / 1e9
        v = candle.volume
        data.append({
            "time": candle.time.replace(tzinfo=None),
            "open": o,
            "high": h,
            "low": l,
            "close": c,
            "volume": v
        })
    return data

async def update_candles(ticker_figi_mapping):
    async with AsyncClient(TINKOFF_TOKEN) as client:
        for ticker, figi in ticker_figi_mapping.items():
            print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {ticker}")
            old_candles = load_candles_from_csv(ticker)
            if not old_candles:
                print(f"‚ö†Ô∏è –ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {ticker}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                continue

            last_time = max(candle['time'] for candle in old_candles)
            now = datetime.utcnow()

            if (now - last_time).total_seconds() < 60:
                print(f"‚úÖ –î–ª—è {ticker} –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã.")
                continue

            new_candles = await fetch_new_candles(client, figi, last_time + timedelta(minutes=5), now)
            if not new_candles:
                print(f"‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {ticker}.")
                continue

            combined_candles = old_candles + new_candles
            combined_candles = {c['time']: c for c in combined_candles}  # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏
            combined_candles = sorted(combined_candles.values(), key=lambda x: x['time'])

            save_candles_to_csv(ticker, combined_candles)
            print(f"‚úÖ –û–±–Ω–æ–≤–∏–ª–∏ {ticker}: {len(new_candles)} –Ω–æ–≤—ã—Ö —Å–≤–µ—á–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–±—É–¥–µ—Ç –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, update_all_candles.py)
# ticker_figi_mapping = {
#     "SBER": "FIGI_SBER",
#     "GAZP": "FIGI_GAZP",
# }
# asyncio.run(update_candles(ticker_figi_mapping))
